FORMAT: 1A
HOST: https://app.eaternity.org/gastro/

# Eaternity Gastro Backend

Things to clarify:

- format of calculated values (how many digits)
- error message handling (e.g. InvalidConfigurationException)
- component type (commercial, conceptual product etc)

- menu-line-id: we need to fill that for existing recipes from the server manually.
And we can assume that three menu lines exist with ids 1,2 and 3

## Recipe Collection [/recipes]

### List All Recipes [GET]

Query Parameters: kitchen-id

+ Response 200 (application/json)

        {
            "results":[
                {
                    "id": "M12312”,
                    "title": "Arabic Risotto with Salad”,
                    "servings":40,
                    "co2-value":35,
                    "co2-rating": "e",
                    "vita-score":822
                    "vita-score-rating": "b",
                    "water-scarcity": 22,
                    "water-scarcity-rating": "c",
                    "nutritional-balanced": true,
                    "nutrients": [
                        {
                            "nutrient": "ENERC",
                            "quantity": { "amount":243, "unit": "kcal" },
                        },
                        {
                            "nutrient": "FAT",
                            "quantity": { "amount":22, "unit": "g" },
                        },
                        ...
                    ],
                    "menu-line-id": 232,
                    "instructions": "some very long text with \n etc."
                    "components":[
                        {
                            "course": "salad",
                            "quantity": { "amount":100, "unit": "g" },
                            "component":
                                {
                                    "title":"Mushroom Salat",
                                    "id": "X20Y",
                                    "type": "recipe"
                                }
                        },
                        {
                            "course": "main course",
                            "quantity": { "amount":2, "unit": "servings" },
                            "component":
                                {
                                    "title":"Arabic Risotto",
                                    "id": "X20Y",
                                    "type": "recipe"
                                }
                        },
                        ...
                    ]
                },
                ...
            ]
        }
      
      
## Recipe [/recipes/{id}]  

### Get One Recipe [GET]

+ Response 200 (application/json)

        {
            "results":[
                {
                    "id": "M12312”,
                    "title": "Arabic Risotto with Salad”,
                    "servings":40,
                    "co2-value":35,
                    "co2-rating": "e",
                    "vita-score":822,
                    "vita-score-rating": "b",
                    "water-scarcity": 22,
                    "water-scarcity-rating": "c",
                    "nutritional-balanced": true,
                    "nutrients": [
                        {
                            "nutrient": "ENERC",
                            "quantity": { "amount":243, "unit": "kcal" },
                        },
                        {
                            "nutrient": "FAT",
                            "quantity": { "amount":22, "unit": "g" },
                        },
                        ...
                    ],
                    "menu-line-id": 232,
                    "instructions": "some very long text with \n etc."
                    "components":[
                        {
                            "course": "salad",
                            "quantity": { "amount":100, "unit": "g" },
                            "component":
                                {
                                    "title":"Mushroom Salat",
                                    "id": "X20Y",
                                    "type": "recipe",
                                    "co2-value":35,
                                    "vita-score":22,
                                    "water-scarcity": 22,
                                }
                        },
                        {
                            "course": "main course",
                            "quantity": { "amount":150, "unit": "g" },
                            "component":
                                {
                                    "title":"Arabic Risotto",
                                    "id": "X20Y",
                                    "type": "recipe",
                                    "co2-value":35,
                                    "vita-score":22,
                                    "water-scarcity": 22,
                                }
                        },
                        ...
                    ]
                }
            ]
        }


### Create a New Recipe [PUT]


+ Request (application/json)

        { 
            "title": "Arabic Risotto with Salad",
            "servings": 4,
            "menu-line-id": 232,
            "instructions": "some very long text with \n etc."
            "components":[
                {
                    "course": "salad",
                    "quantity": { "amount":100, "unit": "g" },
                    "component": 
                        { 
                            "id": "X20Y",
                            "type": "recipe",
                        }
                },
                {
                    "course": "main",
                    "quantity": { "amount":150, "unit": "g" },
                    "component": 
                        { 
                            "id": "G563",
                            "type": "conceptual-product"
                        }
                },
                …
            ]
            }
        }



+ Response 201 (application/json)


## Product [/products] 

### List All Products [GET]

+ Response 200 (application/json)

        {
            "results":[
                {
                    "id": "G563",
                    "name": "Zucchini”
                },
                {
                    "id": "G563",
                    "name": "Zucchini”
                },
                ...
            ]
        }